<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
      http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
      http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
 	  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <!-- Scan for transaction-based resources -->
    <!-- <mvc:annotation-driven conversion-service="conversionService" /> -->
    <context:component-scan base-package="com.edu.carpool.serviceImpl" />
    <context:component-scan base-package="mum.edu.mstore.domain" />
    <context:component-scan base-package="mum.edu.mstore.repository" />
    <!-- <context:component-scan base-package="com.mum.waa.project.formatter" 
    /> -->

    <jpa:repositories base-package="mum.edu.mstore.repository"
                      query-lookup-strategy="create-if-not-found" />

    <!-- <bean id="entityManager" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
    <property name="dataSource" ref="dataSource" /> <property name="packagesToScan" 
    value="mum.edu.mstore.domain" /> <property name="jpaVendorAdapter"> <bean 
    class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" /> </property> 
    <property name="jpaProperties"> <props> <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop> 
    <prop key="hibernate.hbm2ddl.auto">update</prop> <prop key="hibernate.hbm2ddl.import_files"> 
    mysql/users.sql,mysql/categories.sql </prop> </props> </property> </bean> -->

    <bean
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>classpath:jdbc.properties</value>
        </property>
    </bean>
    <bean id="entityManager"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="mum.edu.mstore.domain" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.dialect">${db.databasePlatform}</prop>
                <prop key="hibernate.show_sql">true</prop>
            <!--    <prop key="hibernate.hbm2ddl.import_file">
					 classpath:import.sql
				</prop> -->
            </props>
        </property>
    </bean>
    
<!--    <bean id="hibernateProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.dialect">${db.databasePlatform}</prop>
                <prop key="connection.pool.size">1</prop>
                <prop key="hibernate.show_sql">true</prop>
                 <prop key="hibernate.current_session_context_class">thread</prop> 
            </props>
        </property>
    </bean>-->

    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.driver}" />
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />

    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManager" />
    </bean>




    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="persistenceExceptionTranslationPostProcessor"
          class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />


</beans>